% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/str_prefix.R
\name{str_prefix}
\alias{str_prefix}
\alias{str_postfix}
\alias{str_suffix}
\alias{str_prefix_idem}
\alias{str_postfix_idem}
\alias{str_suffix_idem}
\title{Add prefix or suffix to a string}
\usage{
str_prefix(x, prefix, ...)

str_postfix(x, postfix, ...)

str_suffix(x, postfix, ...)

str_prefix_idem(x, prefix, ...)

str_postfix_idem(x, postfix, ...)

str_suffix_idem(x, postfix, ...)
}
\arguments{
\item{x}{character vector or object with a names attribute}

\item{prefix}{string;}

\item{...}{additional arguments passed to \code{\link[base:paste]{base::paste()}}}

\item{postfix}{string used as a suffix;}
}
\value{
character vector with each element of \code{x} prefixed or sufffixed as
specified.
}
\description{
Adds a prefix or suffix to strings
}
\details{
This is a convenient wrapper for \code{paste0( x, prefix, ...)} and
\code{paste( x, suffix, ...)}.

\code{str_postfix} is an alias for \code{str_postfix}.

\code{\link[=str_prefix_idem]{str_prefix_idem()}} is an idempotent form of \code{\link[=str_prefix]{str_prefix()}}. Prefixes will
not be added to elements that are already prefixed.
}
\examples{
  lets <- letters[1:5]
  str_prefix( lets, "pre." )
  str_posfix( lets, ".post" )

 x <- c( "foo", "pre.foo", "bar", "pre.bar" )
 str_prefix_idem(x, "pre.")

 x <- c( "foo", "foo.post", "bar", "bar.post" )
 str_postfix_idem(x, ".post")

}
